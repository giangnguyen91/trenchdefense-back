# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
    - image: circleci/php:7.1-node-browsers
      environment:
        MYSQL_HOST: 127.0.0.1
        MYSQL_DB: trenchdefense
        MYSQL_USER: trenchdefense
        MYSQL_PASSWORD: trenchdefense
    - image: mysql:5.7
      command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --innodb-large-prefix=true --innodb-file-format=Barracuda
      environment:
        MYSQL_USER: trenchdefense
        MYSQL_PASSWORD: trenchdefense
    steps: # a set of executable commands
    - checkout # special step to check out source code to working directory
    - run: sudo apt install -y libsqlite3-dev zlib1g-dev
    - run: sudo docker-php-ext-install zip
    - run: sudo composer self-update
    - restore_cache: # special step to restore the dependency cache if `composer.lock` does not change
        keys:
        - composer-v1-{{ checksum "composer.lock" }}
        # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
        - composer-v1-
    - run: composer install -n --prefer-dist
    - save_cache: # special step to save the dependency cache with the `composer.lock` cache key template
        key: composer-v1-{{ checksum "composer.lock" }}
        paths:
        - vendor
    - restore_cache: # special step to restore the dependency cache if `package.json` does not change
        keys:
        - v1-dependencies-{{ checksum "package.json" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-
    - run: yarn install
    - save_cache:
        paths:
        - node_modules
        key: v1-dependencies-{{ checksum "package.json" }}

    # run tests!
    - run: php artisan migrate --env=circleci


