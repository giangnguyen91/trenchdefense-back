# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
    - image: mysql:5.7
      environment:
        MYSQL_ROOT_PASSWORD: trenchdefense
    - image: redis:3.2
    steps: # a set of executable commands
    - checkout # special step to check out source code to working directory
    - run: apt-get update
    - run: apt-get install -y sudo
    - run: sudo apt install -y libsqlite3-dev zlib1g-dev
    - run: apt -yqq update
    - run: apt -yqq install libxml2-dev
    - run: sudo apt-get install -y libpng-dev
    - run:
        name: Install PHP Extensions
        command: sudo docker-php-ext-install gd
    - run: php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - run: php -r "if (hash_file('SHA384', 'composer-setup.php') === '93b54496392c062774670ac18b134c3b3a95e5a5e5c8f1a9f115f203b75bf9a129d5daa8ba6a13e2cc8a1da0806388a8') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    - run: php composer-setup.php
    - run: php -r "unlink('composer-setup.php');"
    - run: sudo mv composer.phar /usr/local/bin/composer
    - run: sudo composer self-update
    - run: mysql -h 127.0.0.1 -u root -e "create database trenchdefense"
    - restore_cache: # special step to restore the dependency cache if `composer.lock` does not change
        keys:
        - composer-v1-{{ checksum "composer.lock" }}
        # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
        - composer-v1-
    - run: composer install -n --prefer-dist
    - save_cache: # special step to save the dependency cache with the `composer.lock` cache key template
        key: composer-v1-{{ checksum "composer.lock" }}
        paths:
        - vendor
    - restore_cache: # special step to restore the dependency cache if `package.json` does not change
        keys:
        - v1-dependencies-{{ checksum "package.json" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-
    - run: yarn install
    - save_cache:
        paths:
        - node_modules
        key: v1-dependencies-{{ checksum "package.json" }}

    # run tests!
    - run: php artisan migrate --env=circleci


