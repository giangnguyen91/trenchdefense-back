<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: auth/LinkSocialResult.proto

namespace App\Proto {

  class LinkSocialResult extends \DrSlump\Protobuf\Message {

    /**  @var boolean */
    public $isSuccess = null;
    
    /**  @var \App\Proto\User */
    public $user = null;
    
    /**  @var \App\Proto\Error */
    public $error = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'App.Proto.LinkSocialResult');

      // REQUIRED BOOL isSuccess = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "isSuccess";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE user = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "user";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\App\Proto\User';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE error = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "error";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\App\Proto\Error';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <isSuccess> has a value
     *
     * @return boolean
     */
    public function hasIsSuccess(){
      return $this->_has(1);
    }
    
    /**
     * Clear <isSuccess> value
     *
     * @return \App\Proto\LinkSocialResult
     */
    public function clearIsSuccess(){
      return $this->_clear(1);
    }
    
    /**
     * Get <isSuccess> value
     *
     * @return boolean
     */
    public function getIsSuccess(){
      return $this->_get(1);
    }
    
    /**
     * Set <isSuccess> value
     *
     * @param boolean $value
     * @return \App\Proto\LinkSocialResult
     */
    public function setIsSuccess( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <user> has a value
     *
     * @return boolean
     */
    public function hasUser(){
      return $this->_has(2);
    }
    
    /**
     * Clear <user> value
     *
     * @return \App\Proto\LinkSocialResult
     */
    public function clearUser(){
      return $this->_clear(2);
    }
    
    /**
     * Get <user> value
     *
     * @return \App\Proto\User
     */
    public function getUser(){
      return $this->_get(2);
    }
    
    /**
     * Set <user> value
     *
     * @param \App\Proto\User $value
     * @return \App\Proto\LinkSocialResult
     */
    public function setUser(\App\Proto\User $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <error> has a value
     *
     * @return boolean
     */
    public function hasError(){
      return $this->_has(3);
    }
    
    /**
     * Clear <error> value
     *
     * @return \App\Proto\LinkSocialResult
     */
    public function clearError(){
      return $this->_clear(3);
    }
    
    /**
     * Get <error> value
     *
     * @return \App\Proto\Error
     */
    public function getError(){
      return $this->_get(3);
    }
    
    /**
     * Set <error> value
     *
     * @param \App\Proto\Error $value
     * @return \App\Proto\LinkSocialResult
     */
    public function setError(\App\Proto\Error $value){
      return $this->_set(3, $value);
    }
  }
}

