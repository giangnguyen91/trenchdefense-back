<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: user/UpdateSettingParameter.proto

namespace App\Proto {

  class UpdateSettingParameter extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var boolean */
    public $bgm = null;
    
    /**  @var boolean */
    public $sfx = null;
    
    /**  @var int */
    public $volume = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'App.Proto.UpdateSettingParameter');

      // REQUIRED STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REQUIRED BOOL bgm = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "bgm";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REQUIRED BOOL sfx = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "sfx";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REQUIRED UINT32 volume = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "volume";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \App\Proto\UpdateSettingParameter
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \App\Proto\UpdateSettingParameter
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <bgm> has a value
     *
     * @return boolean
     */
    public function hasBgm(){
      return $this->_has(3);
    }
    
    /**
     * Clear <bgm> value
     *
     * @return \App\Proto\UpdateSettingParameter
     */
    public function clearBgm(){
      return $this->_clear(3);
    }
    
    /**
     * Get <bgm> value
     *
     * @return boolean
     */
    public function getBgm(){
      return $this->_get(3);
    }
    
    /**
     * Set <bgm> value
     *
     * @param boolean $value
     * @return \App\Proto\UpdateSettingParameter
     */
    public function setBgm( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <sfx> has a value
     *
     * @return boolean
     */
    public function hasSfx(){
      return $this->_has(4);
    }
    
    /**
     * Clear <sfx> value
     *
     * @return \App\Proto\UpdateSettingParameter
     */
    public function clearSfx(){
      return $this->_clear(4);
    }
    
    /**
     * Get <sfx> value
     *
     * @return boolean
     */
    public function getSfx(){
      return $this->_get(4);
    }
    
    /**
     * Set <sfx> value
     *
     * @param boolean $value
     * @return \App\Proto\UpdateSettingParameter
     */
    public function setSfx( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <volume> has a value
     *
     * @return boolean
     */
    public function hasVolume(){
      return $this->_has(5);
    }
    
    /**
     * Clear <volume> value
     *
     * @return \App\Proto\UpdateSettingParameter
     */
    public function clearVolume(){
      return $this->_clear(5);
    }
    
    /**
     * Get <volume> value
     *
     * @return int
     */
    public function getVolume(){
      return $this->_get(5);
    }
    
    /**
     * Set <volume> value
     *
     * @param int $value
     * @return \App\Proto\UpdateSettingParameter
     */
    public function setVolume( $value){
      return $this->_set(5, $value);
    }
  }
}

