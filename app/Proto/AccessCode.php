<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: auth/AccessCode.proto

namespace App\Proto {

  class AccessCode extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $tokenID = null;
    
    /**  @var int */
    public $gameUserID = null;
    
    /**  @var string */
    public $token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'App.Proto.AccessCode');

      // REQUIRED UINT32 tokenID = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "tokenID";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REQUIRED UINT32 gameUserID = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "gameUserID";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REQUIRED STRING token = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <tokenID> has a value
     *
     * @return boolean
     */
    public function hasTokenID(){
      return $this->_has(1);
    }
    
    /**
     * Clear <tokenID> value
     *
     * @return \App\Proto\AccessCode
     */
    public function clearTokenID(){
      return $this->_clear(1);
    }
    
    /**
     * Get <tokenID> value
     *
     * @return int
     */
    public function getTokenID(){
      return $this->_get(1);
    }
    
    /**
     * Set <tokenID> value
     *
     * @param int $value
     * @return \App\Proto\AccessCode
     */
    public function setTokenID( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <gameUserID> has a value
     *
     * @return boolean
     */
    public function hasGameUserID(){
      return $this->_has(2);
    }
    
    /**
     * Clear <gameUserID> value
     *
     * @return \App\Proto\AccessCode
     */
    public function clearGameUserID(){
      return $this->_clear(2);
    }
    
    /**
     * Get <gameUserID> value
     *
     * @return int
     */
    public function getGameUserID(){
      return $this->_get(2);
    }
    
    /**
     * Set <gameUserID> value
     *
     * @param int $value
     * @return \App\Proto\AccessCode
     */
    public function setGameUserID( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <token> has a value
     *
     * @return boolean
     */
    public function hasToken(){
      return $this->_has(3);
    }
    
    /**
     * Clear <token> value
     *
     * @return \App\Proto\AccessCode
     */
    public function clearToken(){
      return $this->_clear(3);
    }
    
    /**
     * Get <token> value
     *
     * @return string
     */
    public function getToken(){
      return $this->_get(3);
    }
    
    /**
     * Set <token> value
     *
     * @param string $value
     * @return \App\Proto\AccessCode
     */
    public function setToken( $value){
      return $this->_set(3, $value);
    }
  }
}

