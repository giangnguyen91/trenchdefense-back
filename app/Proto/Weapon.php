<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: weapon/master/Weapon.proto

namespace App\Proto {

  class Weapon extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $id = null;
    
    /**  @var int */
    public $damage = null;
    
    /**  @var int */
    public $reloadSpeed = null;
    
    /**  @var int */
    public $shotSpeed = null;
    
    /**  @var int */
    public $delayTime = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'App.Proto.Weapon');

      // REQUIRED UINT32 id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REQUIRED UINT32 damage = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "damage";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REQUIRED UINT32 reloadSpeed = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "reloadSpeed";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REQUIRED UINT32 shotSpeed = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "shotSpeed";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REQUIRED UINT32 delayTime = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "delayTime";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <id> value
     *
     * @return \App\Proto\Weapon
     */
    public function clearId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <id> value
     *
     * @return int
     */
    public function getId(){
      return $this->_get(1);
    }
    
    /**
     * Set <id> value
     *
     * @param int $value
     * @return \App\Proto\Weapon
     */
    public function setId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <damage> has a value
     *
     * @return boolean
     */
    public function hasDamage(){
      return $this->_has(2);
    }
    
    /**
     * Clear <damage> value
     *
     * @return \App\Proto\Weapon
     */
    public function clearDamage(){
      return $this->_clear(2);
    }
    
    /**
     * Get <damage> value
     *
     * @return int
     */
    public function getDamage(){
      return $this->_get(2);
    }
    
    /**
     * Set <damage> value
     *
     * @param int $value
     * @return \App\Proto\Weapon
     */
    public function setDamage( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <reloadSpeed> has a value
     *
     * @return boolean
     */
    public function hasReloadSpeed(){
      return $this->_has(3);
    }
    
    /**
     * Clear <reloadSpeed> value
     *
     * @return \App\Proto\Weapon
     */
    public function clearReloadSpeed(){
      return $this->_clear(3);
    }
    
    /**
     * Get <reloadSpeed> value
     *
     * @return int
     */
    public function getReloadSpeed(){
      return $this->_get(3);
    }
    
    /**
     * Set <reloadSpeed> value
     *
     * @param int $value
     * @return \App\Proto\Weapon
     */
    public function setReloadSpeed( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <shotSpeed> has a value
     *
     * @return boolean
     */
    public function hasShotSpeed(){
      return $this->_has(4);
    }
    
    /**
     * Clear <shotSpeed> value
     *
     * @return \App\Proto\Weapon
     */
    public function clearShotSpeed(){
      return $this->_clear(4);
    }
    
    /**
     * Get <shotSpeed> value
     *
     * @return int
     */
    public function getShotSpeed(){
      return $this->_get(4);
    }
    
    /**
     * Set <shotSpeed> value
     *
     * @param int $value
     * @return \App\Proto\Weapon
     */
    public function setShotSpeed( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <delayTime> has a value
     *
     * @return boolean
     */
    public function hasDelayTime(){
      return $this->_has(5);
    }
    
    /**
     * Clear <delayTime> value
     *
     * @return \App\Proto\Weapon
     */
    public function clearDelayTime(){
      return $this->_clear(5);
    }
    
    /**
     * Get <delayTime> value
     *
     * @return int
     */
    public function getDelayTime(){
      return $this->_get(5);
    }
    
    /**
     * Set <delayTime> value
     *
     * @param int $value
     * @return \App\Proto\Weapon
     */
    public function setDelayTime( $value){
      return $this->_set(5, $value);
    }
  }
}

